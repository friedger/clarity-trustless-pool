[project]
name = "clarity-trustless-pool"
description = ""
authors = []
telemetry = false
cache_dir = "./.cache"

requirements = [
    {contract_id = "SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4.sbtc-token"},
    {contract_id = "SP000000000000000000002Q6VF78.pox-4"},
]

[contracts.payout-self-service-sbtc]
path = 'contracts/payout-self-service-sbtc.clar'
clarity_version = 3
epoch = 3.1

[contracts.pox4-self-service-multi]
path = 'contracts/pox4-self-service-multi.clar'
clarity_version = 3
epoch = 3.1


[contracts.deposit-vault]
path = 'contracts/deposit-vault.clar'
clarity_version = 3
epoch = 3.1


[contracts.payout-self-service-sbtc_test]
path = 'contracts/tests/payout-self-service-sbtc_test.clar'
clarity_version = 3
epoch = 3.1

[contracts.pox4-self-service-multi_flow_test]
path = 'contracts/tests/pox4-self-service-multi_flow_test.clar'
clarity_version = 3
epoch = 3.1

[repl.analysis]
passes = ["check_checker"]
check_checker = { trusted_sender = false, trusted_caller = false, callee_filter = false }

# Check-checker settings:
# trusted_sender: if true, inputs are trusted after tx_sender has been checked.
# trusted_caller: if true, inputs are trusted after contract-caller has been checked.
# callee_filter: if true, untrusted data may be passed into a private function without a
# warning, if it gets checked inside. This check will also propagate up to the
# caller.
# More informations: https://www.hiro.so/blog/new-safety-checks-in-clarinet
